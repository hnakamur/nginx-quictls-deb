lua_package_path '/usr/lib/nginx/lua/?.lua;/etc/nginx/lua/?.lua;;';

init_by_lua_file '/etc/nginx/lua/init.lua';

# Copied from https://gist.github.com/VirtuBox/7d432c3c3d134cc3cb7e98b30a76c287
ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers 'TLS13+AESGCM+AES128:EECDH+AES128';
ssl_prefer_server_ciphers on;
ssl_session_cache shared:SSL:50m;
ssl_session_timeout 1d;
ssl_session_tickets off;
ssl_ecdh_curve X25519:sect571r1:secp521r1:secp384r1;

server {
    listen 443 ssl;
    server_name sp sp.example.com;

    ssl_certificate /etc/nginx/saml/sp.example.com.crt;
    ssl_certificate_key /etc/nginx/saml/sp.example.com.key;

    location / {
        access_by_lua_block {
            local config = require("saml.service_provider.config")
            local sp = require("saml.service_provider"):new(config)
            sp:access()
        }

        proxy_pass http://127.0.0.1:8080;
    }

    location /sso/finish-login {
        content_by_lua_block {
            local config = require("saml.service_provider.config")
            local sp = require("saml.service_provider"):new(config)
            sp:finish_login()
        }
    }

    location /sso/logout {
        content_by_lua_block {
            local config = require("saml.service_provider.config")
            local sp = require("saml.service_provider"):new(config)
            sp:logout()
        }
    }

    location /sso/logout-finished {
        content_by_lua_block {
            local mail = ngx.var.http_mail
            ngx.say('logout finished, mail=', mail)
        }
    }

    location /test/sign-jwt {
        client_max_body_size 50k;
        client_body_buffer_size 50k;
        content_by_lua_file '/etc/nginx/lua/test/sign-jwt.lua';
    }

    location /test/verify-jwt {
        client_max_body_size 50k;
        client_body_buffer_size 50k;
        content_by_lua_file '/etc/nginx/lua/test/verify-jwt.lua';
    }

    location /test/validate-xml {
        client_max_body_size 50k;
        client_body_buffer_size 50k;
        content_by_lua_file '/etc/nginx/lua/test/validate-xml.lua';
    }
}

server {
    listen 8080;
    server_name _;

    location / {
        content_by_lua_block {
            local uri = ngx.var.uri
            local mail = ngx.var.http_mail
            ngx.say('Welcome to ', uri, ', mail=', mail)
        }
    }
}


server {
    listen 443 ssl;
    server_name idp idp.example.com;

    ssl_certificate /etc/nginx/saml/idp.example.com.crt;
    ssl_certificate_key /etc/nginx/saml/idp.example.com.key;

    location /mock-idp {
        content_by_lua_file '/etc/nginx/lua/mock_idp.lua';
    }
}
